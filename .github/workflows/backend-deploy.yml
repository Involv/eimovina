name: deploy backend

on:
  push:
    branches: [ dev ]
    paths:
      - "eimovina-be/**"
      - ".github/workflows/backend-deploy.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: npm ci
      working-directory: eimovina-be
      run: npm ci

    - name: install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        
        rm awscliv2.zip
        rm -r ./aws

    - name: deploy to dev
      if: github.ref == 'refs/heads/dev'
      working-directory: eimovina-be
      run: |
        CREDS=`aws sts assume-role --role-arn arn:aws:iam::${{ secrets.DEV_ACCOUNT_ID }}:role/dev-ci-role --role-session-name=dev_ci_user`
        export AWS_ACCESS_KEY_ID=`echo $CREDS | jq -r '.Credentials.AccessKeyId'`
        export AWS_SECRET_ACCESS_KEY=`echo $CREDS | jq -r '.Credentials.SecretAccessKey'`
        export AWS_SESSION_TOKEN=`echo $CREDS | jq -r '.Credentials.SessionToken'`
        npm run sls -- deploy -s dev

    - name: deploy to prod
      if: github.ref == 'refs/heads/main'
      working-directory: eimovina-be
      run: |
        CREDS=`aws sts assume-role --role-arn arn:aws:iam::${{ secrets.PROD_ACCOUNT_ID }}:role/prod-ci-role --role-session-name=prod_ci_user`
        export AWS_ACCESS_KEY_ID=`echo $CREDS | jq -r '.Credentials.AccessKeyId'`
        export AWS_SECRET_ACCESS_KEY=`echo $CREDS | jq -r '.Credentials.SecretAccessKey'`
        export AWS_SESSION_TOKEN=`echo $CREDS | jq -r '.Credentials.SessionToken'`
        npm run sls -- deploy -s prod