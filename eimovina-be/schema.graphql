directive @aws_subscribe(mutations: [String!]!) on FIELD_DEFINITION

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  getProperties(search: String, limit: Int!, nextToken: String): PropertiesPage
    @aws_api_key
    @aws_cognito_user_pools
  getProperty(id: ID!): Property @aws_api_key @aws_cognito_user_pools
}

type Mutation {
  updateUser: User
  updateFavoritePropertyId(propertyId: String): User
  notifyPropertyUpdated(id: ID!, userId: ID!, propertyId: ID!): Notification!
    @aws_iam
}

type Subscription {
  onNotified(userId: ID!): Notification
    @aws_subscribe(mutations: ["notifyPropertyUpdated"])
}

type PropertiesPage @aws_api_key @aws_cognito_user_pools {
  properties: [Property!]
  nextToken: String
}

type Property @aws_api_key @aws_cognito_user_pools {
  id: ID!
  realEstateListNumber: String!
  plotNumber: String!
  address: String
  area: String
  rightHolders: [RightHolder]
  plotParts: [PlotPart]
  objects: [Object]
  loans: [Loan]
  municipalityId: String
  submunicipalityId: String
}

type RightHolder @aws_api_key @aws_cognito_user_pools {
  name: String!
  rightsScope: String!
  rightsType: String!
}

type PlotPart @aws_api_key @aws_cognito_user_pools {
  usagePurpose: String!
  address: String!
  area: String!
  buildingNumber: Int!
  entryDate: String!
  basisOfAcquisition: String!
  income: Float!
  plan: String!
  sketch: String!
}

type Object @aws_api_key @aws_cognito_user_pools {
  usagePurpose: String!
  objectNumber: String!
  roomCount: String!
  address: String!
  buildingNumber: String!
  area: String!
  storey: String!
  basisOfAcquisition: String!
}

type Loan @aws_api_key @aws_cognito_user_pools {
  usagePurpose: String!
  loanNumber: String!
  buildingNumber: String!
  serialNumber: Int!
  description: String!
}

type User {
  id: ID!
  name: String!
  favoritePropertyIds: [String]
  createdAt: AWSDateTime!
  lastUpdatedAt: AWSDateTime
}

type Notification @aws_iam @aws_cognito_user_pools {
  id: ID!
  userId: ID!
  propertyId: ID!
  createdAt: AWSDateTime!
}
