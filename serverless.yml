# NOTE: update this with your service name
service: eimovina-be

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables
  - serverless-appsync-plugin

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-central-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:eu-central-1:*:*"

custom:
  appSync:
    - ${file(appsync-api.yml)}

functions:
  fetchProperties:
    handler: functions/getProperties.main

resources:
  Resources:
    PropertyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-nekretnina
        AttributeDefinitions:
          - AttributeName: realEstateListId
            AttributeType: S
          - AttributeName: plotNumber
            AttributeType: S  
          - AttributeName: municipalityId-submunicipalityId
            AttributeType: S
        KeySchema:
        - AttributeName: realEstateListId
          KeyType: HASH
        - AttributeName: municipalityId-submunicipalityId
          KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: PlotNumberIndex
            KeySchema:
              - AttributeName: plotNumber
                KeyType: HASH
              - AttributeName: municipalityId-submunicipalityId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST